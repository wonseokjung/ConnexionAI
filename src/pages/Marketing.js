import React, { useState } from 'react';
import {
  Box,
  Container,
  Typography,
  Grid,
  Paper,
  Button,
  TextField,
  CircularProgress,
  Chip,
  Card,
  CardContent,
  Tabs,
  Tab,
  IconButton,
  Tooltip
} from '@mui/material';
import { motion } from 'framer-motion';
import { FaYoutube, FaChartLine, FaRobot, FaLinkedin, FaTwitter, FaInstagram, FaSearch, FaCopy, FaDownload } from 'react-icons/fa';
import { MdTrendingUp, MdAnalytics, MdContentCopy, MdEmail, MdBusiness, MdCampaign } from 'react-icons/md';

const MarketingService = () => {
  const [activeTab, setActiveTab] = useState(0);
  const [url, setUrl] = useState('');
  const [loading, setLoading] = useState(false);
  const [analysis, setAnalysis] = useState(null);
  const [searchQuery, setSearchQuery] = useState('');
  const [searchResults, setSearchResults] = useState(null);
  const [contentType, setContentType] = useState('');
  const [generatedContent, setGeneratedContent] = useState(null);

  // Îç∞Î™® Îç∞Ïù¥ÌÑ∞
  const demoAnalysis = {
    title: "10Î∂ÑÎßåÏóê ÎÅùÎÇ¥Îäî Ï£ºÏãùÌà¨Ïûê ÌïµÏã¨ ÌåÅ",
    metrics: {
      views: "283,421",
      likes: "15,234",
      comments: "1,234",
      engagement: "8.2%"
    },
    trends: [
      "Ìà¨Ïûê ÍµêÏú°",
      "Ï£ºÏãù Ï¥àÎ≥¥",
      "Ïû¨ÌÖåÌÅ¨",
      "Í≤ΩÏ†ú ÍµêÏú°"
    ],
    insights: [
      {
        title: "ÏΩòÌÖêÏ∏† ÏµúÏ†ÅÌôî",
        points: [
          "ÏòÅÏÉÅ Í∏∏Ïù¥(10Î∂Ñ)Í∞Ä ÏãúÏ≤≠Ïûê Ïù¥ÌÉàÎ•† Í∞êÏÜåÏóê Ìö®Í≥ºÏ†Å",
          "ÏÑ¨ÎÑ§ÏùºÏùò ÌÖçÏä§Ìä∏ Í∞ÄÎèÖÏÑ±Ïù¥ ÎÜíÏïÑ CTR ÏÉÅÏäπ",
          "Ï¥àÎ∞ò 15Ï¥à Ïù∏Ìä∏Î°úÍ∞Ä ÏãúÏ≤≠Ïûê ÏßëÏ§ëÎèÑ Ìñ•ÏÉÅÏóê Í∏∞Ïó¨"
        ]
      },
      {
        title: "ÌÇ§ÏõåÎìú Î∂ÑÏÑù",
        points: [
          "'Ï£ºÏãùÏ¥àÎ≥¥', 'Ï£ºÏãùÍ≥µÎ∂Ä' ÌÇ§ÏõåÎìú Í≤ÄÏÉâÎüâ Ï¶ùÍ∞Ä Ï∂îÏÑ∏",
          "Í¥ÄÎ†® ÎèôÏòÅÏÉÅ Ï∂îÏ≤ú ÎÖ∏Ï∂ú ÎπàÎèÑ ÏÉÅÏúÑ 20% Í∏∞Î°ù",
          "ÎåìÍ∏Ä Ï∞∏Ïó¨ÎèÑÍ∞Ä Ïú†ÏÇ¨ ÏΩòÌÖêÏ∏† ÎåÄÎπÑ 32% ÎÜíÏùå"
        ]
      },
      {
        title: "ÏãúÏ≤≠Ïûê ÌñâÎèô Ìå®ÌÑ¥",
        points: [
          "Ï£ºÏöî ÏãúÏ≤≠ ÏãúÍ∞ÑÎåÄ: Ï†ÄÎÖÅ 8Ïãú-11Ïãú",
          "Î™®Î∞îÏùº ÏãúÏ≤≠ ÎπÑÏ§ë: 76%",
          "ÏòÅÏÉÅ ÎÇ¥ Ï§ëÏöî Ìè¨Ïù∏Ìä∏ ÌÉÄÏûÑÏä§ÌÉ¨ÌîÑ ÌôúÏö©ÎèÑ ÎÜíÏùå"
        ]
      }
    ],
    recommendations: [
      "ÏãúÎ¶¨Ï¶à ÏΩòÌÖêÏ∏†Î°ú ÌôïÏû•ÌïòÏó¨ Íµ¨ÎèÖÏûê Ïú†ÏûÖ Ïú†ÎèÑ",
      "Ïã§Ï†Ñ Ìà¨Ïûê ÏÇ¨Î°Ä Ï§ëÏã¨Ïùò ÌõÑÏÜç ÏΩòÌÖêÏ∏† Ï†úÏûë Ï∂îÏ≤ú",
      "Ï£º 2Ìöå Ï†ïÍ∏∞Ï†ÅÏù∏ ÏóÖÎ°úÎìúÎ°ú Íµ¨ÎèÖÏûê Ï∂©ÏÑ±ÎèÑ Í∞ïÌôî",
      "ÎåìÍ∏Ä ÌîºÎìúÎ∞±ÏùÑ ÌôúÏö©Ìïú Q&A ÏΩòÌÖêÏ∏† Ï†úÏûë"
    ]
  };

  const demoLeads = {
    results: [
      {
        name: "ÍπÄÏÉÅÏö∞",
        position: "ÎßàÏºÄÌåÖ Îß§ÎãàÏ†Ä",
        company: "ÌÖåÌÅ¨Ïä§ÌÉÄÌä∏",
        email: "sang.kim@techstart.kr",
        source: "LinkedIn",
        relevance: "92%",
        tags: ["B2B", "SaaS", "ÎßàÏºÄÌåÖ"]
      },
      {
        name: "Ïù¥ÏßÄÌòÑ",
        position: "ÎîîÏßÄÌÑ∏ ÎßàÏºÄÌåÖ Ï±ÖÏûÑÏûê",
        company: "Ïù¥ÎÖ∏Î≤†Ïù¥ÏÖòÎû©",
        email: "jihyun@innovationlab.co.kr",
        source: "ÌöåÏÇ¨ ÏõπÏÇ¨Ïù¥Ìä∏",
        relevance: "88%",
        tags: ["ÎîîÏßÄÌÑ∏ÎßàÏºÄÌåÖ", "Ïä§ÌÉÄÌä∏ÏóÖ"]
      },
      {
        name: "Î∞ïÏ§ÄÏÑú",
        position: "ÎåÄÌëúÏù¥ÏÇ¨",
        company: "Ìì®Ï≤òÌÖåÌÅ¨",
        email: "jspark@futuretech.com",
        source: "Twitter",
        relevance: "85%",
        tags: ["AI", "Í∏∞Ïà†ÌòÅÏã†"]
      }
    ],
    summary: {
      totalFound: 127,
      relevanceAbove90: 45,
      topIndustries: ["IT/ÌÖåÌÅ¨", "Í∏àÏúµ", "ÍµêÏú°"],
      recommendedApproach: "Í∏∞Ïà† ÌòÅÏã†Í≥º Ìö®Ïú®ÏÑ± Ìñ•ÏÉÅÏóê Ï§ëÏ†êÏùÑ Îëî B2B ÎßàÏºÄÌåÖ Ï†ëÍ∑º Ï∂îÏ≤ú"
    }
  };

  const demoContent = {
    socialMedia: [
      {
        platform: "LinkedIn",
        content: "ÌòÅÏã†Ï†ÅÏù∏ AI Í∏∞Ïà†Î°ú ÎπÑÏ¶àÎãàÏä§ Ìö®Ïú®ÏÑ±ÏùÑ ÎÜíÏù¥ÏÑ∏Ïöî! ConnexionAIÏùò ÏµúÏã† ÏÜîÎ£®ÏÖòÏúºÎ°ú ÏóÖÎ¨¥ ÏûêÎèôÌôîÏôÄ Îç∞Ïù¥ÌÑ∞ Í∏∞Î∞ò ÏùòÏÇ¨Í≤∞Ï†ïÏùÑ Ïã§ÌòÑÌïòÏÑ∏Ïöî. #AI #ÎπÑÏ¶àÎãàÏä§ÌòÅÏã† #ÎîîÏßÄÌÑ∏Ï†ÑÌôò",
        hashtags: ["#AI", "#ÎπÑÏ¶àÎãàÏä§ÌòÅÏã†", "#ÎîîÏßÄÌÑ∏Ï†ÑÌôò", "#ÏóÖÎ¨¥ÏûêÎèôÌôî"],
        bestTime: "ÌôîÏöîÏùº Ïò§Ï†Ñ 10Ïãú",
        engagement: "ÏòàÏÉÅ Ï∞∏Ïó¨ÎèÑ 85%"
      },
      {
        platform: "Twitter",
        content: "AIÎ°ú ÎπÑÏ¶àÎãàÏä§Ïùò ÎØ∏ÎûòÎ•º Ï§ÄÎπÑÌïòÏÑ∏Ïöî üöÄ Ïã§ÏãúÍ∞Ñ Îç∞Ïù¥ÌÑ∞ Î∂ÑÏÑù, ÏûêÎèôÌôîÎêú ÏùòÏÇ¨Í≤∞Ï†ïÏúºÎ°ú Í≤ΩÏüÅÎ†•ÏùÑ ÎÜíÏù¥ÏÑ∏Ïöî!",
        hashtags: ["#AIÏÜîÎ£®ÏÖò", "#ÎπÑÏ¶àÎãàÏä§ÏûêÎèôÌôî", "#ÎØ∏ÎûòÍ∏∞Ïà†"],
        bestTime: "ÌèâÏùº Ïò§ÌõÑ 2Ïãú",
        engagement: "ÏòàÏÉÅ Ï∞∏Ïó¨ÎèÑ 78%"
      }
    ],
    emailTemplate: {
      subject: "AI ÏÜîÎ£®ÏÖòÏúºÎ°ú ÎπÑÏ¶àÎãàÏä§ Ìö®Ïú®ÏÑ±ÏùÑ ÎÜíÏù¥ÏÑ∏Ïöî",
      body: "ÏïàÎÖïÌïòÏÑ∏Ïöî, [Ïù¥Î¶Ñ]Îãò\n\nÍ∑ÄÏÇ¨Ïùò ÎîîÏßÄÌÑ∏ ÌòÅÏã†ÏùÑ ÏúÑÌïú ÏµúÏ†ÅÏùò ÏÜîÎ£®ÏÖòÏùÑ ÏÜåÍ∞úÎìúÎ¶ΩÎãàÎã§...",
      callToAction: "Î¨¥Î£å ÏÉÅÎã¥ Ïã†Ï≤≠ÌïòÍ∏∞",
      expectedOpenRate: "32%"
    }
  };

  const handleTabChange = (event, newValue) => {
    setActiveTab(newValue);
  };

  const handleAnalyze = () => {
    setLoading(true);
    setTimeout(() => {
      setAnalysis(demoAnalysis);
      setLoading(false);
    }, 2000);
  };

  const handleLeadSearch = () => {
    setLoading(true);
    setTimeout(() => {
      setSearchResults(demoLeads);
      setLoading(false);
    }, 2000);
  };

  const handleContentGenerate = () => {
    setLoading(true);
    setTimeout(() => {
      setGeneratedContent(demoContent);
      setLoading(false);
    }, 2000);
  };

  const ServiceSection = ({ title, description, icon, children }) => (
    <Paper
      elevation={0}
      sx={{
        p: 4,
        mb: 4,
        background: 'rgba(255, 255, 255, 0.05)',
        backdropFilter: 'blur(10px)',
        borderRadius: '20px',
        border: '1px solid rgba(255, 255, 255, 0.1)'
      }}
    >
      <Typography
        variant="h5"
        sx={{
          mb: 2,
          color: 'white',
          display: 'flex',
          alignItems: 'center',
          gap: 2
        }}
      >
        {icon} {title}
      </Typography>
      <Typography
        sx={{
          mb: 4,
          color: 'rgba(255, 255, 255, 0.7)'
        }}
      >
        {description}
      </Typography>
      {children}
    </Paper>
  );

  const LeadSearchSection = () => (
    <ServiceSection
      title="AI Ïû†Ïû¨ Í≥†Í∞ù Î∞úÍµ¥"
      description="AIÍ∞Ä Î∂ÑÏÑùÌïú ÏµúÏ†ÅÏùò Ïû†Ïû¨ Í≥†Í∞ùÏùÑ Ï∞æÏïÑÎìúÎ¶ΩÎãàÎã§."
      icon={<FaSearch />}
    >
      <Grid container spacing={3}>
        <Grid item xs={12} md={8}>
          <TextField
            fullWidth
            variant="outlined"
            placeholder="Ï∞æÍ≥† Í≥ÑÏã† Í≥†Í∞ùÏ∏µÏùÑ ÏÑ§Î™ÖÌï¥Ï£ºÏÑ∏Ïöî (Ïòà: B2B SaaS Í∏∞ÏóÖ ÎßàÏºÄÌåÖ Îã¥ÎãπÏûê)"
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            sx={{
              '& .MuiOutlinedInput-root': {
                color: 'white',
                '& fieldset': {
                  borderColor: 'rgba(255, 255, 255, 0.3)',
                },
                '&:hover fieldset': {
                  borderColor: 'rgba(255, 255, 255, 0.5)',
                },
                '&.Mui-focused fieldset': {
                  borderColor: '#4CAF50',
                },
              },
            }}
          />
        </Grid>
        <Grid item xs={12} md={4}>
          <Button
            fullWidth
            variant="contained"
            onClick={handleLeadSearch}
            disabled={loading}
            sx={{
              py: 2,
              background: 'linear-gradient(45deg, #4CAF50, #81C784)',
              '&:hover': {
                background: 'linear-gradient(45deg, #81C784, #4CAF50)',
              },
            }}
          >
            {loading ? <CircularProgress size={24} color="inherit" /> : 'Ïû†Ïû¨ Í≥†Í∞ù Ï∞æÍ∏∞'}
          </Button>
        </Grid>
      </Grid>

      {searchResults && (
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
        >
          <Box sx={{ mt: 4 }}>
            <Grid container spacing={4}>
              <Grid item xs={12} md={8}>
                <Typography variant="h6" sx={{ mb: 3, color: 'white' }}>
                  Í≤ÄÏÉâ Í≤∞Í≥º ({searchResults.results.length})
                </Typography>
                <Grid container spacing={2}>
                  {searchResults.results.map((lead, index) => (
                    <Grid item xs={12} key={index}>
                      <Card
                        sx={{
                          background: 'rgba(255, 255, 255, 0.03)',
                          borderRadius: '15px',
                          border: '1px solid rgba(255, 255, 255, 0.05)'
                        }}
                      >
                        <CardContent>
                          <Grid container alignItems="center" spacing={2}>
                            <Grid item xs={12} md={6}>
                              <Typography variant="subtitle1" sx={{ color: '#4CAF50' }}>
                                {lead.name}
                              </Typography>
                              <Typography variant="body2" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>
                                {lead.position} at {lead.company}
                              </Typography>
                            </Grid>
                            <Grid item xs={12} md={4}>
                              <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>
                                {lead.tags.map((tag, idx) => (
                                  <Chip
                                    key={idx}
                                    label={tag}
                                    size="small"
                                    sx={{
                                      background: 'rgba(76, 175, 80, 0.1)',
                                      color: '#4CAF50',
                                    }}
                                  />
                                ))}
                              </Box>
                            </Grid>
                            <Grid item xs={12} md={2}>
                              <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 1 }}>
                                <Tooltip title="Ïù¥Î©îÏùº Î≥µÏÇ¨">
                                  <IconButton
                                    size="small"
                                    sx={{ color: '#4CAF50' }}
                                    onClick={() => navigator.clipboard.writeText(lead.email)}
                                  >
                                    <MdContentCopy />
                                  </IconButton>
                                </Tooltip>
                                <Chip
                                  label={lead.relevance}
                                  size="small"
                                  sx={{
                                    background: 'rgba(76, 175, 80, 0.1)',
                                    color: '#4CAF50',
                                  }}
                                />
                              </Box>
                            </Grid>
                          </Grid>
                        </CardContent>
                      </Card>
                    </Grid>
                  ))}
                </Grid>
              </Grid>
              <Grid item xs={12} md={4}>
                <Paper
                  elevation={0}
                  sx={{
                    p: 3,
                    background: 'rgba(255, 255, 255, 0.03)',
                    borderRadius: '15px',
                    border: '1px solid rgba(255, 255, 255, 0.05)'
                  }}
                >
                  <Typography variant="h6" sx={{ mb: 3, color: 'white' }}>
                    Î∂ÑÏÑù ÏöîÏïΩ
                  </Typography>
                  <Box sx={{ mb: 2 }}>
                    <Typography variant="body2" sx={{ color: 'rgba(255, 255, 255, 0.7)', mb: 1 }}>
                      Ï¥ù Î∞úÍ≤¨Îêú Ïû†Ïû¨ Í≥†Í∞ù
                    </Typography>
                    <Typography variant="h4" sx={{ color: '#4CAF50' }}>
                      {searchResults.summary.totalFound}
                    </Typography>
                  </Box>
                  <Box sx={{ mb: 2 }}>
                    <Typography variant="body2" sx={{ color: 'rgba(255, 255, 255, 0.7)', mb: 1 }}>
                      Ï£ºÏöî ÏÇ∞ÏóÖÍµ∞
                    </Typography>
                    <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>
                      {searchResults.summary.topIndustries.map((industry, idx) => (
                        <Chip
                          key={idx}
                          label={industry}
                          size="small"
                          sx={{
                            background: 'rgba(76, 175, 80, 0.1)',
                            color: '#4CAF50',
                          }}
                        />
                      ))}
                    </Box>
                  </Box>
                  <Box sx={{ mt: 3 }}>
                    <Button
                      fullWidth
                      variant="contained"
                      startIcon={<FaDownload />}
                      sx={{
                        background: 'linear-gradient(45deg, #4CAF50, #81C784)',
                        '&:hover': {
                          background: 'linear-gradient(45deg, #81C784, #4CAF50)',
                        },
                      }}
                    >
                      Ï†ÑÏ≤¥ Î¶¨Ïä§Ìä∏ Îã§Ïö¥Î°úÎìú
                    </Button>
                  </Box>
                </Paper>
              </Grid>
            </Grid>
          </Box>
        </motion.div>
      )}
    </ServiceSection>
  );

  const ContentGenerationSection = () => (
    <ServiceSection
      title="AI ÏΩòÌÖêÏ∏† ÏÉùÏÑ±"
      description="ÌÉÄÍ≤üÏóê ÏµúÏ†ÅÌôîÎêú ÎßàÏºÄÌåÖ ÏΩòÌÖêÏ∏†Î•º ÏÉùÏÑ±Ìï©ÎãàÎã§."
      icon={<MdCampaign />}
    >
      <Grid container spacing={3}>
        <Grid item xs={12} md={8}>
          <TextField
            fullWidth
            multiline
            rows={4}
            variant="outlined"
            placeholder="ÌôçÎ≥¥ÌïòÍ≥† Ïã∂ÏùÄ Ï†úÌíàÏù¥ÎÇò ÏÑúÎπÑÏä§Ïóê ÎåÄÌï¥ ÏÑ§Î™ÖÌï¥Ï£ºÏÑ∏Ïöî."
            value={contentType}
            onChange={(e) => setContentType(e.target.value)}
            sx={{
              '& .MuiOutlinedInput-root': {
                color: 'white',
                '& fieldset': {
                  borderColor: 'rgba(255, 255, 255, 0.3)',
                },
                '&:hover fieldset': {
                  borderColor: 'rgba(255, 255, 255, 0.5)',
                },
                '&.Mui-focused fieldset': {
                  borderColor: '#2196F3',
                },
              },
            }}
          />
        </Grid>
        <Grid item xs={12} md={4}>
          <Button
            fullWidth
            variant="contained"
            onClick={handleContentGenerate}
            disabled={loading}
            sx={{
              py: 2,
              background: 'linear-gradient(45deg, #2196F3, #64B5F6)',
              '&:hover': {
                background: 'linear-gradient(45deg, #64B5F6, #2196F3)',
              },
            }}
          >
            {loading ? <CircularProgress size={24} color="inherit" /> : 'ÏΩòÌÖêÏ∏† ÏÉùÏÑ±ÌïòÍ∏∞'}
          </Button>
        </Grid>
      </Grid>

      {generatedContent && (
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
        >
          <Box sx={{ mt: 4 }}>
            <Grid container spacing={4}>
              {generatedContent.socialMedia.map((platform, index) => (
                <Grid item xs={12} md={6} key={index}>
                  <Card
                    sx={{
                      background: 'rgba(255, 255, 255, 0.03)',
                      borderRadius: '15px',
                      border: '1px solid rgba(255, 255, 255, 0.05)'
                    }}
                  >
                    <CardContent>
                      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>
                        <Typography variant="h6" sx={{ color: '#2196F3' }}>
                          {platform.platform}
                        </Typography>
                        <IconButton
                          size="small"
                          sx={{ color: '#2196F3' }}
                          onClick={() => navigator.clipboard.writeText(platform.content)}
                        >
                          <FaCopy />
                        </IconButton>
                      </Box>
                      <Typography
                        variant="body1"
                        sx={{
                          color: 'rgba(255, 255, 255, 0.9)',
                          mb: 2
                        }}
                      >
                        {platform.content}
                      </Typography>
                      <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap', mb: 2 }}>
                        {platform.hashtags.map((tag, idx) => (
                          <Chip
                            key={idx}
                            label={tag}
                            size="small"
                            sx={{
                              background: 'rgba(33, 150, 243, 0.1)',
                              color: '#2196F3',
                            }}
                          />
                        ))}
                      </Box>
                      <Box
                        sx={{
                          display: 'flex',
                          justifyContent: 'space-between',
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontSize: '0.875rem'
                        }}
                      >
                        <span>{platform.bestTime}</span>
                        <span>{platform.engagement}</span>
                      </Box>
                    </CardContent>
                  </Card>
                </Grid>
              ))}
              <Grid item xs={12}>
                <Card
                  sx={{
                    background: 'rgba(255, 255, 255, 0.03)',
                    borderRadius: '15px',
                    border: '1px solid rgba(255, 255, 255, 0.05)'
                  }}
                >
                  <CardContent>
                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>
                      <Typography variant="h6" sx={{ color: '#2196F3' }}>
                        Ïù¥Î©îÏùº ÌÖúÌîåÎ¶ø
                      </Typography>
                      <IconButton
                        size="small"
                        sx={{ color: '#2196F3' }}
                        onClick={() => navigator.clipboard.writeText(generatedContent.emailTemplate.body)}
                      >
                        <FaCopy />
                      </IconButton>
                    </Box>
                    <Typography
                      variant="subtitle1"
                      sx={{
                        color: '#2196F3',
                        mb: 1
                      }}
                    >
                      Ï†úÎ™©: {generatedContent.emailTemplate.subject}
                    </Typography>
                    <Typography
                      variant="body1"
                      sx={{
                        color: 'rgba(255, 255, 255, 0.9)',
                        mb: 2,
                        whiteSpace: 'pre-line'
                      }}
                    >
                      {generatedContent.emailTemplate.body}
                    </Typography>
                    <Box
                      sx={{
                        display: 'flex',
                        justifyContent: 'space-between',
                        color: 'rgba(255, 255, 255, 0.7)',
                        fontSize: '0.875rem'
                      }}
                    >
                      <span>ÏòàÏÉÅ Ïò§ÌîàÏú®: {generatedContent.emailTemplate.expectedOpenRate}</span>
                    </Box>
                  </CardContent>
                </Card>
              </Grid>
            </Grid>
          </Box>
        </motion.div>
      )}
    </ServiceSection>
  );

  return (
    <Box sx={{
      background: 'linear-gradient(to bottom, #000000, #1a1a1a)',
      color: 'white',
      minHeight: '100vh',
      pt: 12,
      pb: 8
    }}>
      <Container maxWidth="lg">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
        >
          <Typography
            variant="h2"
            sx={{
              mb: 2,
              fontWeight: 700,
              background: 'linear-gradient(45deg, #2196F3, #4CAF50)',
              backgroundClip: 'text',
              WebkitBackgroundClip: 'text',
              WebkitTextFillColor: 'transparent',
            }}
          >
            AI ÎßàÏºÄÌåÖ ÏÑúÎπÑÏä§
          </Typography>

          <Typography
            variant="h5"
            sx={{
              mb: 6,
              color: 'rgba(255, 255, 255, 0.8)',
              fontWeight: 300
            }}
          >
            AI Í∏∞Ïà†Î°ú ÏµúÏ†ÅÌôîÎêú ÎßàÏºÄÌåÖ Ï†ÑÎûµÏùÑ Íµ¨ÌòÑÌïòÏÑ∏Ïöî
          </Typography>

          <Tabs
            value={activeTab}
            onChange={handleTabChange}
            sx={{
              mb: 4,
              '& .MuiTabs-indicator': {
                background: 'linear-gradient(45deg, #2196F3, #4CAF50)',
              },
              '& .MuiTab-root': {
                color: 'rgba(255, 255, 255, 0.7)',
                '&.Mui-selected': {
                  color: 'white',
                },
              },
            }}
          >
            <Tab icon={<FaYoutube />} label="YouTube Î∂ÑÏÑù" />
            <Tab icon={<FaSearch />} label="Ïû†Ïû¨ Í≥†Í∞ù Î∞úÍµ¥" />
            <Tab icon={<MdCampaign />} label="ÏΩòÌÖêÏ∏† ÏÉùÏÑ±" />
          </Tabs>

          {activeTab === 0 && (
            <ServiceSection
              title="YouTube Ìä∏Î†åÎìú Î∂ÑÏÑù"
              description="AIÍ∞Ä Î∂ÑÏÑùÌïòÎäî YouTube Ìä∏Î†åÎìúÏôÄ ÏΩòÌÖêÏ∏† ÏµúÏ†ÅÌôî Ï†ÑÎûµ"
              icon={<FaYoutube />}
            >
              {/* Í∏∞Ï°¥ YouTube Î∂ÑÏÑù Ïª¥Ìè¨ÎÑåÌä∏ ÎÇ¥Ïö© */}
            </ServiceSection>
          )}
          {activeTab === 1 && <LeadSearchSection />}
          {activeTab === 2 && <ContentGenerationSection />}
        </motion.div>
      </Container>
    </Box>
  );
};

export default MarketingService; 